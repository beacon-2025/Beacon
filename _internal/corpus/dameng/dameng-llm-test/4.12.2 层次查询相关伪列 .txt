-- 创建测试表
CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    employee_name VARCHAR(50),
    manager_id INT
);
-- 插入测试数据
INSERT INTO employees (employee_id, employee_name, manager_id) VALUES
(1, 'Alice', NULL),
(2, 'Bob', 1),
(3, 'Charlie', 1),
(4, 'David', 2),
(5, 'Eve', 2),
(6, 'Frank', 3),
(7, 'Grace', 3),
(8, 'Hank', 4),
(9, 'Ivy', 4),
(10, 'Jack', 5);
-- 查询员工及其层级
SELECT employee_id, employee_name, LEVEL
FROM employees
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;
-- 查询员工及其是否为叶节点
SELECT employee_id, employee_name, CONNECT_BY_ISLEAF AS is_leaf
FROM employees
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;
-- 插入一条会导致循环的数据
INSERT INTO employees (employee_id, employee_name, manager_id) VALUES
(11, 'Kevin', 10);
-- 更新数据以形成循环
UPDATE employees SET manager_id = 1 WHERE employee_id = 11;
-- 查询员工及其是否会导致循环
SELECT employee_id, employee_name, CONNECT_BY_ISCYCLE AS is_cycle
FROM employees
START WITH manager_id IS NULL
CONNECT BY NOCYCLE PRIOR employee_id = manager_id;
-- 查询员工及其层级和是否为叶节点
SELECT employee_id, employee_name, LEVEL, CONNECT_BY_ISLEAF AS is_leaf
FROM employees
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;
-- 查询员工及其层级和是否会导致循环
SELECT employee_id, employee_name, LEVEL, CONNECT_BY_ISCYCLE AS is_cycle
FROM employees
START WITH manager_id IS NULL
CONNECT BY NOCYCLE PRIOR employee_id = manager_id;
-- 查询员工及其是否为叶节点和是否会导致循环
SELECT employee_id, employee_name, CONNECT_BY_ISLEAF AS is_leaf, CONNECT_BY_ISCYCLE AS is_cycle
FROM employees
START WITH manager_id IS NULL
CONNECT BY NOCYCLE PRIOR employee_id = manager_id;
-- 查询所有叶节点员工及其层级
SELECT employee_id, employee_name, LEVEL
FROM employees
WHERE CONNECT_BY_ISLEAF = 1
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;
-- 查询所有会导致循环的员工及其层级
SELECT employee_id, employee_name, LEVEL
FROM employees
WHERE CONNECT_BY_ISCYCLE = 1
START WITH manager_id IS NULL
CONNECT BY NOCYCLE PRIOR employee_id = manager_id;
-- 查询所有非叶节点员工及其层级
SELECT employee_id, employee_name, LEVEL
FROM employees
WHERE CONNECT_BY_ISLEAF = 0
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;
-- 查询所有不会导致循环的员工及其层级
SELECT employee_id, employee_name, LEVEL
FROM employees
WHERE CONNECT_BY_ISCYCLE = 0
START WITH manager_id IS NULL
CONNECT BY NOCYCLE PRIOR employee_id = manager_id