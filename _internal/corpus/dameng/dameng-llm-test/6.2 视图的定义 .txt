-- 创建模式
CREATE SCHEMA PURCHASING;
CREATE SCHEMA SALES;
CREATE SCHEMA PRODUCTION;
-- 创建表 PURCHASING.VENDOR
CREATE TABLE PURCHASING.VENDOR (
    VENDORID INT PRIMARY KEY,
    ACCOUNTNO VARCHAR(50),
    NAME VARCHAR(100),
    ACTIVEFLAG INT,
    CREDIT INT
);
-- 插入数据到 PURCHASING.VENDOR
INSERT INTO PURCHASING.VENDOR (VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT) VALUES
(3, '00', '北京十月文艺出版社', 1, 1),
(4, '00', '人民邮电出版社', 1, 1),
(5, '00', '清华大学出版社', 1, 1),
(6, '00', '中华书局', 1, 1),
(7, '00', '广州出版社', 1, 1),
(8, '00', '上海出版社', 1, 1),
(9, '00', '21世纪出版社', 1, 1),
(10, '00', '外语教学与研究出版社', 1, 1),
(11, '00', '社械工业出版社', 1, 1),
(12, '00', '文学出版社', 1, 1);
-- 创建表 SALES.SALESPERSON
CREATE TABLE SALES.SALESPERSON (
    SALESPERSONID INT PRIMARY KEY,
    EMPLOYEEID INT,
    SALESLASTYEAR DECIMAL(10, 4)
);
-- 创建表 RESOURCES.EMPLOYEE
CREATE TABLE RESOURCES.EMPLOYEE (
    EMPLOYEEID INT PRIMARY KEY,
    TITLE VARCHAR(100),
    PERSONID INT
);
-- 创建表 PERSON.PERSON
CREATE TABLE PERSON.PERSON (
    PERSONID INT PRIMARY KEY,
    NAME VARCHAR(100)
);
-- 插入数据到 SALES.SALESPERSON
INSERT INTO SALES.SALESPERSON (SALESPERSONID, EMPLOYEEID, SALESLASTYEAR) VALUES
(1, 1, 10.0000),
(2, 2, 20.0000);
-- 插入数据到 RESOURCES.EMPLOYEE
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, TITLE, PERSONID) VALUES
(1, '销售代表', 1),
(2, '销售代表', 2);
-- 插入数据到 PERSON.PERSON
INSERT INTO PERSON.PERSON (PERSONID, NAME) VALUES
(1, '郭艳'),
(2, '孙丽');
-- 创建表 PRODUCTION.PRODUCT_VENDOR
CREATE TABLE PRODUCTION.PRODUCT_VENDOR (
    VENDORID INT,
    PRODUCTID INT
);
-- 插入数据到 PRODUCTION.PRODUCT_VENDOR
INSERT INTO PRODUCTION.PRODUCT_VENDOR (VENDORID, PRODUCTID) VALUES
(5, 1),
(6, 2),
(6, 3),
(7, 4),
(8, 5),
(9, 6),
(10, 7),
(11, 8);
-- 测试用例 1: 创建简单视图，视图列名与查询列名相同
CREATE VIEW PURCHASING.VENDOR_EXCELLENT AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1;
-- 测试用例 2: 创建视图，视图列名与查询列名不同
CREATE VIEW PURCHASING.VENDOR_EXCELLENT_2 (ID, ACCOUNT, VENDOR_NAME, ACTIVE, CREDIT_RATING) AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1;
-- 测试用例 3: 创建视图，使用 WITH CHECK OPTION
CREATE VIEW PURCHASING.VENDOR_EXCELLENT_3 AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1
WITH CHECK OPTION;
-- 测试用例 4: 创建视图，使用 WITH READ ONLY
CREATE VIEW PURCHASING.VENDOR_EXCELLENT_4 AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1
WITH READ ONLY;
-- 测试用例 5: 创建视图，基于多表连接
CREATE VIEW SALES.SALESPERSON_INFO AS
SELECT T1.SALESPERSONID, T2.TITLE, T3.NAME, T1.SALESLASTYEAR
FROM SALES.SALESPERSON T1, RESOURCES.EMPLOYEE T2, PERSON.PERSON T3
WHERE T1.EMPLOYEEID = T2.EMPLOYEEID AND T2.PERSONID = T3.PERSONID;
-- 测试用例 6: 创建视图，使用 GROUP BY 和 COUNT
CREATE VIEW PRODUCTION.VENDOR_STATIS (VENDORID, PRODUCT_COUNT) AS
SELECT VENDORID, COUNT(PRODUCTID)
FROM PRODUCTION.PRODUCT_VENDOR
GROUP BY VENDORID
ORDER BY VENDORID;
-- 测试用例 7: 创建视图，使用 ORDER BY
CREATE VIEW PURCHASING.VENDOR_SORTED AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
ORDER BY NAME;
-- 测试用例 8: 创建视图，使用 CASCADED CHECK OPTION
CREATE VIEW PURCHASING.VENDOR_EXCELLENT_5 AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1
WITH CASCADED CHECK OPTION;
-- 测试用例 9: 创建视图，使用 LOCAL CHECK OPTION
CREATE VIEW PURCHASING.VENDOR_EXCELLENT_6 AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1
WITH LOCAL CHECK OPTION;
-- 测试用例 10: 创建视图，使用 OR REPLACE
CREATE OR REPLACE VIEW PURCHASING.VENDOR_EXCELLENT_7 AS
SELECT VENDORID, ACCOUNTNO, NAME, ACTIVEFLAG, CREDIT
FROM PURCHASING.VENDOR
WHERE CREDIT = 1