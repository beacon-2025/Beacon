-- 创建本地表 LOCAL_TABLE
CREATE TABLE LOCAL_TABLE (
    ID INT PRIMARY KEY,
    NAME VARCHAR(50)
);
-- 插入数据到 LOCAL_TABLE
INSERT INTO LOCAL_TABLE (ID, NAME) VALUES (1, 'Alice');
INSERT INTO LOCAL_TABLE (ID, NAME) VALUES (2, 'Bob');
INSERT INTO LOCAL_TABLE (ID, NAME) VALUES (3, 'Charlie');
-- 查询远程表 SYSOBJECTS@LINK1
SELECT * FROM SYSOBJECTS@LINK1;
-- 插入数据到远程表 T1@LINK1
INSERT INTO T1@LINK1 VALUES (1, 2, 3);
-- 更新远程表 T1@LINK1 的数据
UPDATE T1@LINK1 SET C1 = C1 + 1 WHERE C2 NOT IN (SELECT ID FROM LOCAL_TABLE);
-- 删除远程表 T1@LINK1 的数据
DELETE FROM T1@LINK1 WHERE C1 IN (SELECT ID FROM T2@LINK2);
-- 调用远程存储过程 PROC1@LINK1
CALL PROC1@LINK1(1, 'test');
-- 创建本地视图 VIEW1 查询远程表 T1@LINK1
CREATE VIEW VIEW1 AS SELECT ITEM FROM T1@LINK1;
-- 创建本地视图 VIEW2 查询远程表 T1@LINK1 并指定别名
CREATE VIEW VIEW2 AS SELECT ITEM AS ALIAS_NAME FROM T1@LINK1;
-- 查询本地表 LOCAL_TABLE 和其他链接的表 T2@LINK2
SELECT * FROM LOCAL_TABLE WHERE ID IN (SELECT ID FROM T2@LINK2);
-- 更新远程表 T1@LINK1 的数据并引用本地表 LOCAL_TABLE
UPDATE T1@LINK1 SET C1 = C1 + 1 WHERE C2 IN (SELECT ID FROM LOCAL_TABLE);
-- 删除远程表 T1@LINK1 的数据并引用本地表 LOCAL_TABLE
DELETE FROM T1@LINK1 WHERE C1 IN (SELECT ID FROM LOCAL_TABLE);
-- 调用远程存储过程 PROC2@LINK1 并传递参数
CALL PROC2@LINK1(10, 'example');
-- 查询远程表 T1@LINK1 并过滤数据
SELECT * FROM T1@LINK1 WHERE C1 > 10;
-- 插入多条数据到远程表 T1@LINK1
INSERT INTO T1@LINK1 VALUES (4, 5, 6), (7, 8, 9);
-- 更新远程表 T1@LINK1 的数据并引用其他远程表 T2@LINK2
UPDATE T1@LINK1 SET C1 = C1 + 1 WHERE C2 IN (SELECT ID FROM T2@LINK2);
-- 删除远程表 T1@LINK1 的数据并引用其他远程表 T2@LINK2
DELETE FROM T1@LINK1 WHERE C1 IN (SELECT ID FROM T2@LINK2);
-- 调用远程存储过程 PROC3@LINK1 并传递多个参数
CALL PROC3@LINK1(100, 'param1', 'param2');
-- 查询远程表 T1@LINK1 并排序
SELECT * FROM T1@LINK1 ORDER BY C1 DESC;
-- 插入数据到远程表 T1@LINK1 并指定列
INSERT INTO T1@LINK1 (C1, C2, C3) VALUES (10, 20, 30);
-- 更新远程表 T1@LINK1 的数据并引用本地表的多个条件
UPDATE T1@LINK1 SET C1 = C1 + 1 WHERE C2 IN (SELECT ID FROM LOCAL_TABLE) AND C3 > 5;
-- 删除远程表 T1@LINK1 的数据并引用本地表的多个条件
DELETE FROM T1@LINK1 WHERE C1 IN (SELECT ID FROM LOCAL_TABLE) AND C2 < 10