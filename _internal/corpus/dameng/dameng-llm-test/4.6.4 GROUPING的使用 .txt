-- 创建表 PERSON.ADDRESS
CREATE TABLE PERSON.ADDRESS (
    CITY VARCHAR(50),
    ADDRESS1 VARCHAR(100)
);
-- 插入测试数据
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区369号金地太阳城56-1-202');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区369号金地太阳城57-2-302');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区保利花园50-1-304');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区保利花园51-1-702');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区关山春晓51-1-702');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区关山春晓55-1-202');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区关山春晓10-1-202');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区关山春晓11-1-202');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市洪山区', '洪山区光谷软件园C1_501');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市青山区', '青山区青翠苑1号');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市武昌区', '武昌区武船新村115号');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市武昌区', '武昌区武船新村1号');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市汉阳区', '汉阳大道熊家湾15号');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市江汉区', '江汉区发展大道561号');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市江汉区', '江汉区发展大道555号');
INSERT INTO PERSON.ADDRESS (CITY, ADDRESS1) VALUES ('武汉市江汉区', '江汉区发展大道423号');
-- 测试用例 1: 使用 GROUPING 函数进行简单的 ROLLUP 分组
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1);
-- 测试用例 2: 使用 GROUPING 函数进行 CUBE 分组
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY CUBE(CITY, ADDRESS1);
-- 测试用例 3: 使用 GROUPING 函数进行 GROUPING SETS 分组
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY GROUPING SETS ((CITY), (ADDRESS1), ());
-- 测试用例 4: 使用 GROUPING 函数进行表达式运算
SELECT GROUPING(CITY) + GROUPING(ADDRESS1) AS G_SUM, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1);
-- 测试用例 5: 使用 GROUPING 函数进行多列分组
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1);
-- 测试用例 6: 使用 GROUPING 函数进行单列分组
SELECT GROUPING(CITY) AS G_CITY, CITY, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY);
-- 测试用例 7: 使用 GROUPING 函数进行多列分组并排序
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1)
ORDER BY G_CITY, G_ADD;
-- 测试用例 8: 使用 GROUPING 函数进行多列分组并过滤
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1)
HAVING GROUPING(CITY) = 0;
-- 测试用例 9: 使用 GROUPING 函数进行多列分组并过滤
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1)
HAVING GROUPING(ADDRESS1) = 1;
-- 测试用例 10: 使用 GROUPING 函数进行多列分组并过滤
SELECT GROUPING(CITY) AS G_CITY, GROUPING(ADDRESS1) AS G_ADD, CITY, ADDRESS1, COUNT(*) AS NUMS
FROM PERSON.ADDRESS
GROUP BY ROLLUP(CITY, ADDRESS1)
HAVING GROUPING(CITY) + GROUPING(ADDRESS1) = 1