-- 创建类型 TYPE01
CREATE OR REPLACE TYPE TYPE01 AS OBJECT(
    NAME VARCHAR2(10)
) NOT FINAL;
/

-- 创建类型 TYPE02
CREATE OR REPLACE TYPE TYPE02 AS OBJECT(
    ID INT
) NOT FINAL;
/

-- 创建表 T1
CREATE TABLE T1(
    C1 INT,
    C2 TYPE01
);
-- 插入数据到 T1
INSERT INTO T1 VALUES(1, TYPE01('WSY'));
INSERT INTO T1 VALUES(2, TYPE01('ABC'));
INSERT INTO T1 VALUES(3, TYPE02(100));
COMMIT;
-- 查询 T1 表中 C2 列是 TYPE01 类型的记录
SELECT * FROM T1 WHERE C2 IS OF (TYPE01);
-- 查询 T1 表中 C2 列不是 TYPE01 类型的记录
SELECT * FROM T1 WHERE C2 IS NOT OF (TYPE01);
-- 查询 T1 表中 C2 列是 TYPE01 或 TYPE02 类型的记录
SELECT * FROM T1 WHERE C2 IS OF (TYPE01, TYPE02);
-- 创建触发器 TRG1，在 T1 表插入数据时触发
CREATE OR REPLACE TRIGGER TRG1
AFTER INSERT ON T1
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('New row inserted with C1 = ' || :NEW.C1);
END;
/

-- 插入数据到 T1，触发 TRG1
INSERT INTO T1 VALUES(4, TYPE01('XYZ'));
COMMIT;
-- 创建触发器 TRG2，在 T1 表更新数据时触发，检查 C1 的值是否大于 0
CREATE OR REPLACE TRIGGER TRG2
BEFORE UPDATE ON T1
FOR EACH ROW
BEGIN
    IF :NEW.C1 <= 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'C1 must be greater than 0');
END IF;
END;
/

-- 尝试更新 T1 表中的 C1 值为 0，触发 TRG2
UPDATE T1 SET C1 = 0 WHERE C1 = 1;
-- 创建触发器 TRG3，在 T1 表插入数据时触发，设置 C1 的默认值为 100
CREATE OR REPLACE TRIGGER TRG3
BEFORE INSERT ON T1
FOR EACH ROW
BEGIN
    IF :NEW.C1 IS NULL THEN
        :NEW.C1 := 100;
END IF;
END;
/

-- 插入数据到 T1，不指定 C1 的值，触发 TRG3
INSERT INTO T1 (C2) VALUES (TYPE01('DEF'));
COMMIT;
-- 创建审计表 AUDIT_T1
CREATE TABLE AUDIT_T1(
    ACTION VARCHAR2(10),
    C1 INT,
    C2 TYPE01,
    ACTION_TIME TIMESTAMP
);
-- 创建触发器 TRG4，在 T1 表插入数据时触发，记录审计信息
CREATE OR REPLACE TRIGGER TRG4
AFTER INSERT ON T1
FOR EACH ROW
BEGIN
    INSERT INTO AUDIT_T1 (ACTION, C1, C2, ACTION_TIME)
    VALUES ('INSERT', :NEW.C1, :NEW.C2, SYSTIMESTAMP);
END;
/

-- 插入数据到 T1，触发 TRG4
INSERT INTO T1 VALUES(5, TYPE01('GHI'));
COMMIT;
-- 创建触发器 TRG5，在 T1 表删除数据时触发，防止删除 C1 = 1 的记录
CREATE OR REPLACE TRIGGER TRG5
BEFORE DELETE ON T1
FOR EACH ROW
BEGIN
    IF :OLD.C1 = 1 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Cannot delete record with C1 = 1');
END IF;
END;
/

-- 尝试删除 T1 表中 C1 = 1 的记录，触发 TRG5
DELETE FROM T1 WHERE C1 = 1;
-- 创建触发器 TRG6，在 T1 表更新数据时触发，确保 C1 的增加量不超过 25%
CREATE OR REPLACE TRIGGER TRG6
BEFORE UPDATE ON T1
FOR EACH ROW
BEGIN
    IF (:NEW.C1 - :OLD.C1) / :OLD.C1 > 0.25 THEN
        RAISE_APPLICATION_ERROR(-20003, 'C1 increase cannot exceed 25%');
END IF;
END;
/

-- 尝试更新 T1 表中的 C1 值，触发 TRG6
UPDATE T1 SET C1 = 2 WHERE C1 = 1;
-- 创建表 T2
CREATE TABLE T2(
    C1 INT PRIMARY KEY,
    C2 VARCHAR2(10)
);
-- 创建触发器 TRG7，在 T1 表插入数据时触发，确保 C1 的值存在于 T2 表中
CREATE OR REPLACE TRIGGER TRG7
BEFORE INSERT ON T1
FOR EACH ROW
BEGIN
    IF NOT EXISTS (SELECT 1 FROM T2 WHERE C1 = :NEW.C1) THEN
        RAISE_APPLICATION_ERROR(-20004, 'C1 must exist in T2');
END IF;
END;
/

-- 插入数据到 T2
INSERT INTO T2 VALUES(1, 'ABC');
COMMIT;
-- 插入数据到 T1，触发 TRG7
INSERT INTO T1 VALUES(1, TYPE01('JKL'));
COMMIT