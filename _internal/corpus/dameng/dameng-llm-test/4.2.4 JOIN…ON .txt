-- 创建EMPLOYEE表
CREATE TABLE RESOURCES.EMPLOYEE (
    EMPLOYEEID INT PRIMARY KEY,
    HAIRDATE DATE
);
-- 创建SALESPERSON表
CREATE TABLE SALES.SALESPERSON (
    EMPLOYEEID INT PRIMARY KEY,
    SALESLASTYEAR DECIMAL(10, 4)
);
-- 测试用例 1: 基本JOIN查询
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (1, '2002-05-02');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (1, 10.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID;
-- 测试用例 2: 多行数据JOIN查询
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (2, '2003-06-15');
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (3, '2004-07-20');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (2, 15.0000);
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (3, 25.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID;
-- 测试用例 3: 无匹配数据的JOIN查询
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (4, '2005-08-25');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (5, 30.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID;
-- 测试用例 4: 多表JOIN查询
-- 创建DEPARTMENT表
CREATE TABLE RESOURCES.DEPARTMENT (
    DEPARTMENTID INT PRIMARY KEY,
    DEPARTMENTNAME VARCHAR(50)
);
-- 插入数据
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (6, '2006-09-30');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (6, 35.0000);
INSERT INTO RESOURCES.DEPARTMENT (DEPARTMENTID, DEPARTMENTNAME) VALUES (1, 'Sales');
-- 多表JOIN查询
SELECT T1.HAIRDATE, T2.SALESLASTYEAR, T3.DEPARTMENTNAME
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2 ON T1.EMPLOYEEID = T2.EMPLOYEEID
JOIN RESOURCES.DEPARTMENT T3 ON T2.EMPLOYEEID = T3.DEPARTMENTID;
-- 测试用例 5: 复杂JOIN条件
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (7, '2007-10-05');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (7, 40.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID AND T2.SALESLASTYEAR > 20.0000;
-- 测试用例 6: 自连接查询
-- 创建EMPLOYEE_MANAGER表
CREATE TABLE RESOURCES.EMPLOYEE_MANAGER (
    EMPLOYEEID INT PRIMARY KEY,
    MANAGERID INT
);
-- 插入数据
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (8, '2008-11-10');
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (9, '2009-12-15');
INSERT INTO RESOURCES.EMPLOYEE_MANAGER (EMPLOYEEID, MANAGERID) VALUES (8, 9);
-- 自连接查询
SELECT T1.EMPLOYEEID AS Employee, T2.EMPLOYEEID AS Manager
FROM RESOURCES.EMPLOYEE T1
JOIN RESOURCES.EMPLOYEE_MANAGER T2
ON T1.EMPLOYEEID = T2.MANAGERID;
-- 测试用例 7: 多条件JOIN查询
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (10, '2010-01-20');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (10, 50.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID AND T1.HAIRDATE > '2005-01-01';
-- 测试用例 8: 使用别名进行JOIN查询
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (11, '2011-02-25');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (11, 60.0000);
SELECT E.HAIRDATE, S.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE E
JOIN SALES.SALESPERSON S
ON E.EMPLOYEEID = S.EMPLOYEEID;
-- 测试用例 9: 使用JOIN查询并排序
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (12, '2012-03-30');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (12, 70.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID
ORDER BY T2.SALESLASTYEAR DESC;
-- 测试用例 10: 使用JOIN查询并限制结果集
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, HAIRDATE) VALUES (13, '2013-04-05');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESLASTYEAR) VALUES (13, 80.0000);
SELECT T1.HAIRDATE, T2.SALESLASTYEAR
FROM RESOURCES.EMPLOYEE T1
JOIN SALES.SALESPERSON T2
ON T1.EMPLOYEEID = T2.EMPLOYEEID
LIMIT 1