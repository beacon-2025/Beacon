-- 创建一个测试表用于后续的SQL语句
CREATE TABLE test_table_1 (
    id INT PRIMARY KEY,
    name VARCHAR(50)
);
-- 插入一些测试数据
INSERT INTO test_table_1 (id, name) VALUES (1, 'Alice');
INSERT INTO test_table_1 (id, name) VALUES (2, 'Bob');
-- 查询当前会话的INI参数
SELECT * FROM V$PARAMETER WHERE TYPE = 'SESSION';
-- 查询系统级INI参数
SELECT * FROM V$PARAMETER WHERE TYPE = 'SYS';
-- 查询只读INI参数
SELECT * FROM V$PARAMETER WHERE TYPE = 'READ ONLY';
-- 修改动态系统级INI参数
ALTER SYSTEM SET PARAMETER_NAME = 'new_value' SCOPE = BOTH;
-- 修改动态会话级INI参数
ALTER SESSION SET PARAMETER_NAME = 'new_value';
-- 查询修改后的动态系统级INI参数
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME' AND TYPE = 'SYS';
-- 查询修改后的动态会话级INI参数
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME' AND TYPE = 'SESSION';
-- 尝试修改只读INI参数（应失败）
ALTER SYSTEM SET READ_ONLY_PARAMETER = 'new_value' SCOPE = BOTH;
-- 查询静态INI参数
SELECT * FROM V$PARAMETER WHERE TYPE = 'IN FILE';
-- 修改静态INI参数（需重启生效）
-- 注意：此操作需要手动修改dm.ini文件并重启服务器
-- 以下SQL语句仅为示例，实际修改需手动操作
-- ALTER SYSTEM SET STATIC_PARAMETER = 'new_value' SCOPE = SPFILE;
-- 查询修改后的静态INI参数（需重启后生效）
SELECT * FROM V$PARAMETER WHERE NAME = 'STATIC_PARAMETER' AND TYPE = 'IN FILE';
-- 创建新会话并查询会话级INI参数
-- 假设PARAMETER_NAME已被修改为'new_value'
ALTER SESSION SET PARAMETER_NAME = 'new_value';
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME' AND TYPE = 'SESSION';
-- 查询所有INI参数
SELECT * FROM V$PARAMETER;
-- 查询特定INI参数的详细信息
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME';
-- 查询INI参数的历史修改记录
SELECT * FROM V$PARAMETER_HISTORY WHERE NAME = 'PARAMETER_NAME';
-- 查询INI参数的默认值
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME';
-- 查询INI参数的当前值和默认值
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME'
UNION
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME';
-- 查询INI参数的修改权限
SELECT * FROM V$PARAMETER_PRIVILEGE WHERE NAME = 'PARAMETER_NAME';
-- 查询INI参数的依赖关系
SELECT * FROM V$PARAMETER_DEPENDENCY WHERE NAME = 'PARAMETER_NAME';
-- 查询INI参数的影响范围
SELECT * FROM V$PARAMETER_SCOPE WHERE NAME = 'PARAMETER_NAME';
-- 创建另一个测试表用于后续的SQL语句
CREATE TABLE test_table_2 (
    id INT PRIMARY KEY,
    description VARCHAR(100)
);
-- 插入一些测试数据
INSERT INTO test_table_2 (id, description) VALUES (1, 'Test Description 1');
INSERT INTO test_table_2 (id, description) VALUES (2, 'Test Description 2');
-- 查询新表中的数据
SELECT * FROM test_table_2;
-- 修改动态系统级INI参数并查询
ALTER SYSTEM SET PARAMETER_NAME_2 = 'new_value_2' SCOPE = BOTH;
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_2' AND TYPE = 'SYS';
-- 修改动态会话级INI参数并查询
ALTER SESSION SET PARAMETER_NAME_2 = 'new_value_2';
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_2' AND TYPE = 'SESSION';
-- 查询所有INI参数的当前值
SELECT * FROM V$PARAMETER;
-- 查询特定INI参数的详细信息
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_2';
-- 查询INI参数的历史修改记录
SELECT * FROM V$PARAMETER_HISTORY WHERE NAME = 'PARAMETER_NAME_2';
-- 查询INI参数的默认值
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_2';
-- 查询INI参数的当前值和默认值
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_2'
UNION
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_2';
-- 查询INI参数的修改权限
SELECT * FROM V$PARAMETER_PRIVILEGE WHERE NAME = 'PARAMETER_NAME_2';
-- 查询INI参数的依赖关系
SELECT * FROM V$PARAMETER_DEPENDENCY WHERE NAME = 'PARAMETER_NAME_2';
-- 查询INI参数的影响范围
SELECT * FROM V$PARAMETER_SCOPE WHERE NAME = 'PARAMETER_NAME_2';
-- 创建第三个测试表用于后续的SQL语句
CREATE TABLE test_table_3 (
    id INT PRIMARY KEY,
    value INT
);
-- 插入一些测试数据
INSERT INTO test_table_3 (id, value) VALUES (1, 100);
INSERT INTO test_table_3 (id, value) VALUES (2, 200);
-- 查询新表中的数据
SELECT * FROM test_table_3;
-- 修改动态系统级INI参数并查询
ALTER SYSTEM SET PARAMETER_NAME_3 = 'new_value_3' SCOPE = BOTH;
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_3' AND TYPE = 'SYS';
-- 修改动态会话级INI参数并查询
ALTER SESSION SET PARAMETER_NAME_3 = 'new_value_3';
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_3' AND TYPE = 'SESSION';
-- 查询所有INI参数的当前值
SELECT * FROM V$PARAMETER;
-- 查询特定INI参数的详细信息
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_3';
-- 查询INI参数的历史修改记录
SELECT * FROM V$PARAMETER_HISTORY WHERE NAME = 'PARAMETER_NAME_3';
-- 查询INI参数的默认值
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_3';
-- 查询INI参数的当前值和默认值
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_3'
UNION
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_3';
-- 查询INI参数的修改权限
SELECT * FROM V$PARAMETER_PRIVILEGE WHERE NAME = 'PARAMETER_NAME_3';
-- 查询INI参数的依赖关系
SELECT * FROM V$PARAMETER_DEPENDENCY WHERE NAME = 'PARAMETER_NAME_3';
-- 查询INI参数的影响范围
SELECT * FROM V$PARAMETER_SCOPE WHERE NAME = 'PARAMETER_NAME_3';
-- 创建第四个测试表用于后续的SQL语句
CREATE TABLE test_table_4 (
    id INT PRIMARY KEY,
    flag BOOLEAN
);
-- 插入一些测试数据
INSERT INTO test_table_4 (id, flag) VALUES (1, TRUE);
INSERT INTO test_table_4 (id, flag) VALUES (2, FALSE);
-- 查询新表中的数据
SELECT * FROM test_table_4;
-- 修改动态系统级INI参数并查询
ALTER SYSTEM SET PARAMETER_NAME_4 = 'new_value_4' SCOPE = BOTH;
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_4' AND TYPE = 'SYS';
-- 修改动态会话级INI参数并查询
ALTER SESSION SET PARAMETER_NAME_4 = 'new_value_4';
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_4' AND TYPE = 'SESSION';
-- 查询所有INI参数的当前值
SELECT * FROM V$PARAMETER;
-- 查询特定INI参数的详细信息
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_4';
-- 查询INI参数的历史修改记录
SELECT * FROM V$PARAMETER_HISTORY WHERE NAME = 'PARAMETER_NAME_4';
-- 查询INI参数的默认值
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_4';
-- 查询INI参数的当前值和默认值
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_4'
UNION
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_4';
-- 查询INI参数的修改权限
SELECT * FROM V$PARAMETER_PRIVILEGE WHERE NAME = 'PARAMETER_NAME_4';
-- 查询INI参数的依赖关系
SELECT * FROM V$PARAMETER_DEPENDENCY WHERE NAME = 'PARAMETER_NAME_4';
-- 查询INI参数的影响范围
SELECT * FROM V$PARAMETER_SCOPE WHERE NAME = 'PARAMETER_NAME_4';
-- 创建第五个测试表用于后续的SQL语句
CREATE TABLE test_table_5 (
    id INT PRIMARY KEY,
    timestamp TIMESTAMP
);
-- 插入一些测试数据
INSERT INTO test_table_5 (id, timestamp) VALUES (1, '2023-01-01 00:00:00');
INSERT INTO test_table_5 (id, timestamp) VALUES (2, '2023-02-01 00:00:00');
-- 查询新表中的数据
SELECT * FROM test_table_5;
-- 修改动态系统级INI参数并查询
ALTER SYSTEM SET PARAMETER_NAME_5 = 'new_value_5' SCOPE = BOTH;
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_5' AND TYPE = 'SYS';
-- 修改动态会话级INI参数并查询
ALTER SESSION SET PARAMETER_NAME_5 = 'new_value_5';
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_5' AND TYPE = 'SESSION';
-- 查询所有INI参数的当前值
SELECT * FROM V$PARAMETER;
-- 查询特定INI参数的详细信息
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_5';
-- 查询INI参数的历史修改记录
SELECT * FROM V$PARAMETER_HISTORY WHERE NAME = 'PARAMETER_NAME_5';
-- 查询INI参数的默认值
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_5';
-- 查询INI参数的当前值和默认值
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_5'
UNION
SELECT * FROM V$PARAMETER_DEFAULT WHERE NAME = 'PARAMETER_NAME_5';
-- 查询INI参数的修改权限
SELECT * FROM V$PARAMETER_PRIVILEGE WHERE NAME = 'PARAMETER_NAME_5';
-- 查询INI参数的依赖关系
SELECT * FROM V$PARAMETER_DEPENDENCY WHERE NAME = 'PARAMETER_NAME_5';
-- 查询INI参数的影响范围
SELECT * FROM V$PARAMETER_SCOPE WHERE NAME = 'PARAMETER_NAME_5';
-- 创建第六个测试表用于后续的SQL语句
CREATE TABLE test_table_6 (
    id INT PRIMARY KEY,
    amount DECIMAL(10, 2)
);
-- 插入一些测试数据
INSERT INTO test_table_6 (id, amount) VALUES (1, 100.50);
INSERT INTO test_table_6 (id, amount) VALUES (2, 200.75);
-- 查询新表中的数据
SELECT * FROM test_table_6;
-- 修改动态系统级INI参数并查询
ALTER SYSTEM SET PARAMETER_NAME_6 = 'new_value_6' SCOPE = BOTH;
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_6' AND TYPE = 'SYS';
-- 修改动态会话级INI参数并查询
ALTER SESSION SET PARAMETER_NAME_6 = 'new_value_6';
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_6' AND TYPE = 'SESSION';
-- 查询所有INI参数的当前值
SELECT * FROM V$PARAMETER;
-- 查询特定INI参数的详细信息
SELECT * FROM V$PARAMETER WHERE NAME = 'PARAMETER_NAME_6'