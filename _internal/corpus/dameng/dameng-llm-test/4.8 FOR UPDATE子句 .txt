-- 创建测试表
CREATE TABLE RESOURCES.DEPARTMENT (
    DEPARTMENTID INT PRIMARY KEY,
    NAME VARCHAR(50)
);
-- 插入测试数据
INSERT INTO RESOURCES.DEPARTMENT (DEPARTMENTID, NAME) VALUES (1, '采购部门');
INSERT INTO RESOURCES.DEPARTMENT (DEPARTMENTID, NAME) VALUES (2, '销售部门');
INSERT INTO RESOURCES.DEPARTMENT (DEPARTMENTID, NAME) VALUES (3, '人力资源');
INSERT INTO RESOURCES.DEPARTMENT (DEPARTMENTID, NAME) VALUES (4, '行政部门');
INSERT INTO RESOURCES.DEPARTMENT (DEPARTMENTID, NAME) VALUES (5, '广告部');
-- 用例1: 基本FOR UPDATE查询
SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE;
-- 用例2: FOR UPDATE OF指定列
SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE OF NAME;
-- 用例3: FOR UPDATE NOWAIT
SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE NOWAIT;
-- 用例4: FOR UPDATE WAIT 5
SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE WAIT 5;
-- 用例5: FOR UPDATE SKIP LOCKED
SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE SKIP LOCKED;
-- 用例6: FOR UPDATE 2 SKIP LOCKED
SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE 2 SKIP LOCKED;
-- 用例7: FOR READ ONLY
SELECT * FROM RESOURCES.DEPARTMENT FOR READ ONLY;
-- 用例8: 多表连接FOR UPDATE
CREATE TABLE RESOURCES.EMPLOYEE (
    EMPLOYEEID INT PRIMARY KEY,
    NAME VARCHAR(50),
    DEPARTMENTID INT
);
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, NAME, DEPARTMENTID) VALUES (1, '张三', 1);
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, NAME, DEPARTMENTID) VALUES (2, '李四', 2);
SELECT D.NAME, E.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.EMPLOYEE E ON D.DEPARTMENTID = E.DEPARTMENTID 
FOR UPDATE;
-- 用例9: 多表连接FOR UPDATE OF指定列
SELECT D.NAME, E.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.EMPLOYEE E ON D.DEPARTMENTID = E.DEPARTMENTID 
FOR UPDATE OF D.NAME;
-- 用例10: 多表连接FOR UPDATE NOWAIT
SELECT D.NAME, E.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.EMPLOYEE E ON D.DEPARTMENTID = E.DEPARTMENTID 
FOR UPDATE NOWAIT;
-- 用例11: 多表连接FOR UPDATE WAIT 3
SELECT D.NAME, E.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.EMPLOYEE E ON D.DEPARTMENTID = E.DEPARTMENTID 
FOR UPDATE WAIT 3;
-- 用例12: 多表连接FOR UPDATE SKIP LOCKED
SELECT D.NAME, E.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.EMPLOYEE E ON D.DEPARTMENTID = E.DEPARTMENTID 
FOR UPDATE SKIP LOCKED;
-- 用例13: 多表连接FOR UPDATE 2 SKIP LOCKED
SELECT D.NAME, E.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.EMPLOYEE E ON D.DEPARTMENTID = E.DEPARTMENTID 
FOR UPDATE 2 SKIP LOCKED;
-- 用例14: 带GROUP BY的查询（预期报错）
SELECT DEPARTMENTID, COUNT(*) 
FROM RESOURCES.DEPARTMENT 
GROUP BY DEPARTMENTID 
FOR UPDATE;
-- 用例15: 带聚集函数的查询（预期报错）
SELECT MAX(DEPARTMENTID) 
FROM RESOURCES.DEPARTMENT 
FOR UPDATE;
-- 用例16: 带分析函数的查询（预期报错）
SELECT MAX(DEPARTMENTID) OVER (PARTITION BY NAME) 
FROM RESOURCES.DEPARTMENT 
FOR UPDATE;
-- 用例17: 带WITH子句的查询（预期报错）
WITH DEPT_CTE AS (
    SELECT * FROM RESOURCES.DEPARTMENT FOR UPDATE
)
SELECT * FROM DEPT_CTE;
-- 用例18: 涉及LOB对象的查询
CREATE TABLE RESOURCES.DOCUMENT (
    DOCID INT PRIMARY KEY,
    CONTENT CLOB
);
INSERT INTO RESOURCES.DOCUMENT (DOCID, CONTENT) VALUES (1, 'This is a test document.');
SELECT * FROM RESOURCES.DOCUMENT FOR UPDATE;
-- 用例19: 涉及DBLINK的查询（假设DBLINK已配置）
-- 注意：实际使用时需要替换为有效的DBLINK名称
SELECT * FROM RESOURCES.DEPARTMENT@DBLINK_NAME FOR UPDATE;
-- 用例20: 多表连接FOR UPDATE OF指定列（其中一个表不支持FOR UPDATE）
CREATE TABLE RESOURCES.TESTB (
    TESTBID INT PRIMARY KEY,
    NAME VARCHAR(50)
);
INSERT INTO RESOURCES.TESTB (TESTBID, NAME) VALUES (1, 'TestB');
SELECT D.NAME, T.NAME 
FROM RESOURCES.DEPARTMENT D 
JOIN RESOURCES.TESTB T ON D.DEPARTMENTID = T.TESTBID 
FOR UPDATE OF D.NAME