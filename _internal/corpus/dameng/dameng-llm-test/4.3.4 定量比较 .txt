-- 创建员工表
CREATE TABLE RESOURCES.EMPLOYEE (
    EMPLOYEEID INT PRIMARY KEY,
    PERSONID INT,
    NATIONALNO VARCHAR(20)
);
-- 创建人员表
CREATE TABLE PERSON.PERSON (
    PERSONID INT PRIMARY KEY,
    NAME VARCHAR(50)
);
-- 创建员工部门表
CREATE TABLE RESOURCES.EMPLOYEE_DEPARTMENT (
    EMPLOYEEID INT,
    DEPARTMENTID INT
);
-- 创建产品表
CREATE TABLE PRODUCTION.PRODUCT (
    PRODUCTID INT PRIMARY KEY,
    NAME VARCHAR(100),
    NOWPRICE DECIMAL(10, 4)
);
-- 创建产品供应商表
CREATE TABLE PRODUCTION.PRODUCT_VENDOR (
    PRODUCTID INT,
    VENDORID INT
);
-- 创建供应商表
CREATE TABLE PURCHASING.VENDOR (
    VENDORID INT PRIMARY KEY,
    NAME VARCHAR(100)
);
-- 插入员工数据
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, PERSONID, NATIONALNO) VALUES
(1, 101, '420921197708051523'),
(2, 102, '420921197708051524'),
(3, 103, '420921197708051525'),
(4, 104, '420921197708051526'),
(5, 105, '420921197708051527');
-- 插入人员数据
INSERT INTO PERSON.PERSON (PERSONID, NAME) VALUES
(101, '王菲'),
(102, '张三'),
(103, '李四'),
(104, '王五'),
(105, '赵六');
-- 插入员工部门数据
INSERT INTO RESOURCES.EMPLOYEE_DEPARTMENT (EMPLOYEEID, DEPARTMENTID) VALUES
(1, 1),
(2, 2),
(3, 3);
-- 插入产品数据
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, NOWPRICE) VALUES
(1, '射雕英雄传(全四册)', 21.7000),
(2, '鲁迅文集(小说、散文、杂文)全两册', 20.0000),
(3, '长征', 37.7000),
(4, '数据结构(C语言版)(附光盘)', 25.5000),
(5, '噼里啪啦丛书(全 7册)', 42.0000);
-- 插入供应商数据
INSERT INTO PURCHASING.VENDOR (VENDORID, NAME) VALUES
(1, '中华书局'),
(2, '商务印书馆'),
(3, '人民文学出版社');
-- 插入产品供应商数据
INSERT INTO PRODUCTION.PRODUCT_VENDOR (PRODUCTID, VENDORID) VALUES
(1, 1),
(2, 1),
(3, 2),
(4, 3),
(5, 1);
-- 查询没有分配部门的员工的编号、姓名和身份证号码
SELECT T1.EMPLOYEEID, T2.NAME, T1.NATIONALNO
FROM RESOURCES.EMPLOYEE T1, PERSON.PERSON T2
WHERE T1.PERSONID = T2.PERSONID
AND T1.EMPLOYEEID <> ALL (
    SELECT EMPLOYEEID
    FROM RESOURCES.EMPLOYEE_DEPARTMENT
);
-- 查询比中华书局所供应的所有图书都贵的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE > ALL (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
    AND T2.VENDORID = (
        SELECT VENDORID
        FROM PURCHASING.VENDOR
        WHERE NAME = '中华书局'
    )
)
AND PRODUCTID <> ALL (
    SELECT T1.PRODUCTID
    FROM PRODUCTION.PRODUCT_VENDOR T1, PURCHASING.VENDOR T2
    WHERE T1.VENDORID = T2.VENDORID
    AND T2.NAME = '中华书局'
);
-- 查询比中华书局供应的任意图书贵的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE > ANY (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
    AND T2.VENDORID = (
        SELECT VENDORID
        FROM PURCHASING.VENDOR
        WHERE NAME = '中华书局'
    )
);
-- 查询比中华书局供应的任意图书贵的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE > SOME (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
    AND T2.VENDORID = (
        SELECT VENDORID
        FROM PURCHASING.VENDOR
        WHERE NAME = '中华书局'
    )
);
-- 查询比所有供应商供应的图书都贵的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE > ALL (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
);
-- 查询比任意供应商供应的图书贵的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE > ANY (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
);
-- 查询比任意供应商供应的图书贵的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE > SOME (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
);
-- 查询比所有供应商供应的图书都便宜的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE < ALL (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
);
-- 查询比任意供应商供应的图书便宜的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE < ANY (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
);
-- 查询比任意供应商供应的图书便宜的图书的编号、名称和现在销售价格
SELECT PRODUCTID, NAME, NOWPRICE
FROM PRODUCTION.PRODUCT
WHERE NOWPRICE < SOME (
    SELECT T1.NOWPRICE
    FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2
    WHERE T1.PRODUCTID = T2.PRODUCTID
)