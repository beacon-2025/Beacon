-- 公共前置语句：创建必要的表和插入数据
CREATE TABLE RESOURCES.EMPLOYEE (
    EMPLOYEEID INT PRIMARY KEY,
    TITLE VARCHAR(50)
);
CREATE TABLE SALES.SALESPERSON (
    EMPLOYEEID INT PRIMARY KEY,
    SALESTHISYEAR DECIMAL(10, 4),
    SALESLASTYEAR DECIMAL(10, 4)
);
CREATE TABLE PRODUCTION.PRODUCT (
    PRODUCTID INT PRIMARY KEY,
    NAME VARCHAR(100),
    AUTHOR VARCHAR(100),
    NOWPRICE DECIMAL(10, 4),
    PUBLISHER VARCHAR(100)
);
CREATE TABLE PRODUCTION.PRODUCT_SUBCATEGORY (
    PRODUCT_SUBCATEGORYID INT PRIMARY KEY,
    PRODUCT_CATEGORYID INT
);
CREATE TABLE PRODUCTION.PRODUCT_CATEGORY (
    PRODUCT_CATEGORYID INT PRIMARY KEY,
    NAME VARCHAR(100)
);
CREATE TABLE PRODUCTION.PRODUCT_REVIEW (
    PRODUCTID INT,
    NAME VARCHAR(100),
    REVIEWDATE DATE
);
CREATE TABLE PRODUCTION.PRODUCT_VENDOR (
    PRODUCTID INT,
    VENDORID INT
);
CREATE TABLE PURCHASING.VENDOR (
    VENDORID INT PRIMARY KEY,
    NAME VARCHAR(100)
);
-- 插入测试数据
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, TITLE) VALUES (4, '销售代表');
INSERT INTO RESOURCES.EMPLOYEE (EMPLOYEEID, TITLE) VALUES (5, '销售代表');
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESTHISYEAR, SALESLASTYEAR) VALUES (4, 8.0000, 10.0000);
INSERT INTO SALES.SALESPERSON (EMPLOYEEID, SALESTHISYEAR, SALESLASTYEAR) VALUES (5, 8.0000, 20.0000);
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (1, '红楼梦', '曹雪芹', 20.0000, '人民文学出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (2, '水浒传', '施耐庵，罗贯中', 14.3000, '人民文学出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (3, '老人与海', '海明威', 6.1000, '上海译文出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (4, '射雕英雄传(全四册)', '金庸', 25.0000, '广州出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (5, '鲁迅文集(小说、散文、杂文)全两册', '鲁迅', 30.0000, '人民文学出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (6, '长征', '王树增', 40.0000, '人民文学出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (7, '数据结构(C语言版)(附光盘)', '严蔚敏', 50.0000, '清华大学出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (8, '工作中无小事', '陈满麒', 11.4000, '机械工业出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (9, '突破英文基础词汇', '刘毅', 11.1000, '外语教学与研究出版社');
INSERT INTO PRODUCTION.PRODUCT (PRODUCTID, NAME, AUTHOR, NOWPRICE, PUBLISHER) VALUES (10, '噼里啪啦丛书(全 7册)', '佐佐木洋子', 60.0000, '二十一世纪出版社');
INSERT INTO PRODUCTION.PRODUCT_SUBCATEGORY (PRODUCT_SUBCATEGORYID, PRODUCT_CATEGORYID) VALUES (1, 1);
INSERT INTO PRODUCTION.PRODUCT_SUBCATEGORY (PRODUCT_SUBCATEGORYID, PRODUCT_CATEGORYID) VALUES (2, 1);
INSERT INTO PRODUCTION.PRODUCT_CATEGORY (PRODUCT_CATEGORYID, NAME) VALUES (1, '小说');
INSERT INTO PRODUCTION.PRODUCT_REVIEW (PRODUCTID, NAME, REVIEWDATE) VALUES (1, '刘青', '2007-05-06');
INSERT INTO PRODUCTION.PRODUCT_REVIEW (PRODUCTID, NAME, REVIEWDATE) VALUES (2, '桑泽恩', '2007-05-06');
INSERT INTO PRODUCTION.PRODUCT_VENDOR (PRODUCTID, VENDORID) VALUES (1, 1);
INSERT INTO PRODUCTION.PRODUCT_VENDOR (PRODUCTID, VENDORID) VALUES (2, 2);
INSERT INTO PURCHASING.VENDOR (VENDORID, NAME) VALUES (1, '人民文学出版社');
INSERT INTO PURCHASING.VENDOR (VENDORID, NAME) VALUES (2, '上海译文出版社');
-- 测试用例 1: 查询职务为销售代表的员工的编号、今年销售总额和去年销售总额
SELECT EMPLOYEEID, SALESTHISYEAR, SALESLASTYEAR 
FROM SALES.SALESPERSON 
WHERE EMPLOYEEID IN 
(SELECT EMPLOYEEID 
 FROM RESOURCES.EMPLOYEE 
 WHERE TITLE = '销售代表');
-- 测试用例 2: 查询对目录名为小说的图书进行评论的人员名称和评论日期
SELECT DISTINCT NAME, REVIEWDATE 
FROM PRODUCTION.PRODUCT_REVIEW 
WHERE PRODUCTID IN 
(SELECT PRODUCTID 
 FROM PRODUCTION.PRODUCT 
 WHERE PRODUCT_SUBCATEGORYID IN 
 (SELECT PRODUCT_SUBCATEGORYID 
  FROM PRODUCTION.PRODUCT_SUBCATEGORY 
  WHERE PRODUCT_CATEGORYID IN 
  (SELECT PRODUCT_CATEGORYID  
   FROM PRODUCTION.PRODUCT_CATEGORY 
   WHERE NAME = '小说')));
-- 测试用例 3: 查询当前价格低于红楼梦的图书的名称、作者和当前价格
SELECT NAME, AUTHOR, NOWPRICE 
FROM PRODUCTION.PRODUCT 
WHERE NOWPRICE < (SELECT NOWPRICE FROM PRODUCTION.PRODUCT 
                  WHERE NAME = '红楼梦');
-- 测试用例 4: 使用别名查询当前价格低于红楼梦的图书的名称、作者和当前价格
SELECT NAME, AUTHOR, NOWPRICE 
FROM PRODUCTION.PRODUCT T1 
WHERE T1.NOWPRICE < (SELECT T2.NOWPRICE  
                     FROM PRODUCTION.PRODUCT T2 
                     WHERE T2.NAME = '红楼梦');
-- 测试用例 5: 查询图书的出版社和产品供应商名称相同的图书编号和名称
SELECT T1.PRODUCTID, T1.NAME 
FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT_VENDOR T2 
WHERE T1.PRODUCTID = T2.PRODUCTID AND T1.PUBLISHER = ANY 
(SELECT NAME FROM PURCHASING.VENDOR T3 
 WHERE T2.VENDORID = T3.VENDORID);
-- 测试用例 6: 查询图书的出版社和产品供应商名称不相同的图书编号和名称
SELECT T1.PRODUCTID, T1.NAME 
FROM PRODUCTION.PRODUCT T1 
WHERE T1.PUBLISHER <> ALL(SELECT NAME FROM PURCHASING.VENDOR);
-- 测试用例 7: 使用连接查询实现查询职务为销售代表的员工的编号、今年销售总额和去年销售总额
SELECT T1.EMPLOYEEID, T1.SALESTHISYEAR, T1.SALESLASTYEAR 
FROM SALES.SALESPERSON T1, RESOURCES.EMPLOYEE T2 
WHERE T1.EMPLOYEEID = T2.EMPLOYEEID AND T2.TITLE = '销售代表';
-- 测试用例 8: 使用连接查询实现查询当前价格低于红楼梦的图书的名称、作者和当前价格
SELECT T1.NAME, T1.AUTHOR, T1.NOWPRICE 
FROM PRODUCTION.PRODUCT T1, PRODUCTION.PRODUCT T2 
WHERE T2.NAME = '红楼梦' AND T1.NOWPRICE < T2.NOWPRICE;
-- 测试用例 9: 查询所有图书的名称和当前价格
SELECT NAME, NOWPRICE 
FROM PRODUCTION.PRODUCT;
-- 测试用例 10: 查询所有员工的编号和职务
SELECT EMPLOYEEID, TITLE 
FROM RESOURCES.EMPLOYEE