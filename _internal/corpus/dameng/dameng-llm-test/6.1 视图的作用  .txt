-- 创建基表 PRODUCT_1
CREATE TABLE PRODUCT_1 (
    PRODUCTID INT PRIMARY KEY,
    NAME VARCHAR(100),
    AUTHOR VARCHAR(100),
    PUBLISHER VARCHAR(100),
    NOWPRICE DECIMAL(10, 2)
);
-- 创建基表 PRODUCT_2
CREATE TABLE PRODUCT_2 (
    PRODUCTID INT PRIMARY KEY,
    PUBLISHTIME DATE,
    PRODUCT_CATEGORYID INT,
    PRODUCTNO VARCHAR(50),
    DESCRIPTION TEXT,
    PHOTO VARCHAR(255),
    SATETYSTOCKLEVEL INT,
    ORIGINALPRICE DECIMAL(10, 2),
    NOWPRICE DECIMAL(10, 2),
    DISCOUNT DECIMAL(5, 2),
    TYPE VARCHAR(50),
    PAPERTOTAL INT,
    WORDTOTAL INT,
    SELLSTARTTIME DATE,
    SELLENDTIME DATE
);
-- 插入一些测试数据到 PRODUCT_1
INSERT INTO PRODUCT_1 (PRODUCTID, NAME, AUTHOR, PUBLISHER, NOWPRICE) VALUES
(1, 'Book1', 'Author1', 'Publisher1', 19.99),
(2, 'Book2', 'Author2', 'Publisher2', 29.99),
(3, 'Book3', 'Author3', 'Publisher3', 39.99);
-- 插入一些测试数据到 PRODUCT_2
INSERT INTO PRODUCT_2 (PRODUCTID, PUBLISHTIME, PRODUCT_CATEGORYID, PRODUCTNO, DESCRIPTION, PHOTO, SATETYSTOCKLEVEL, ORIGINALPRICE, NOWPRICE, DISCOUNT, TYPE, PAPERTOTAL, WORDTOTAL, SELLSTARTTIME, SELLENDTIME) VALUES
(1, '2023-01-01', 101, 'P001', 'Description1', '/images/book1.jpg', 100, 24.99, 19.99, 0.20, 'Hardcover', 300, 50000, '2023-01-01', '2023-12-31'),
(2, '2023-02-01', 102, 'P002', 'Description2', '/images/book2.jpg', 150, 34.99, 29.99, 0.15, 'Paperback', 250, 45000, '2023-02-01', '2023-12-31'),
(3, '2023-03-01', 103, 'P003', 'Description3', '/images/book3.jpg', 200, 44.99, 39.99, 0.10, 'Hardcover', 350, 55000, '2023-03-01', '2023-12-31');
-- 创建视图 PRODUCT，模拟原 PRODUCT 表
CREATE VIEW PRODUCT AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID;
-- 查询视图 PRODUCT 中的所有数据
SELECT * FROM PRODUCT;
-- 查询视图 PRODUCT 中的 NAME, AUTHOR, NOWPRICE 列
SELECT NAME, AUTHOR, NOWPRICE FROM PRODUCT;
-- 查询视图 PRODUCT 中 NOWPRICE 大于 30 的记录
SELECT * FROM PRODUCT WHERE NOWPRICE > 30;
-- 更新视图 PRODUCT 中的 NOWPRICE 列
UPDATE PRODUCT SET NOWPRICE = 35.99 WHERE PRODUCTID = 3;
-- 删除视图 PRODUCT 中 PRODUCTID 为 3 的记录
DELETE FROM PRODUCT WHERE PRODUCTID = 3;
-- 创建只读视图 PRODUCT_READ_ONLY
CREATE VIEW PRODUCT_READ_ONLY AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WITH READ ONLY;
-- 查询只读视图 PRODUCT_READ_ONLY
SELECT * FROM PRODUCT_READ_ONLY;
-- 尝试更新只读视图 PRODUCT_READ_ONLY 中的 NOWPRICE 列
-- 这应该会失败，因为视图是只读的
UPDATE PRODUCT_READ_ONLY SET NOWPRICE = 40.99 WHERE PRODUCTID = 2;
-- 删除视图 PRODUCT
DROP VIEW PRODUCT;
-- 删除只读视图 PRODUCT_READ_ONLY
DROP VIEW PRODUCT_READ_ONLY;
-- 创建视图 PRODUCT_VIEW
CREATE VIEW PRODUCT_VIEW AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID;
-- 查询视图 PRODUCT_VIEW
SELECT * FROM PRODUCT_VIEW;
-- 创建视图 PRODUCT_VIEW_CONDITION
CREATE VIEW PRODUCT_VIEW_CONDITION AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WHERE 
    P1.NOWPRICE > 20;
-- 查询视图 PRODUCT_VIEW_CONDITION
SELECT * FROM PRODUCT_VIEW_CONDITION;
-- 创建视图 PRODUCT_VIEW_ORDERED
CREATE VIEW PRODUCT_VIEW_ORDERED AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
ORDER BY 
    P1.NOWPRICE DESC;
-- 查询视图 PRODUCT_VIEW_ORDERED
SELECT * FROM PRODUCT_VIEW_ORDERED;
-- 创建视图 PRODUCT_VIEW_AGG
CREATE VIEW PRODUCT_VIEW_AGG AS
SELECT 
    P1.PUBLISHER,
    COUNT(*) AS TOTAL_PRODUCTS,
    AVG(P1.NOWPRICE) AS AVG_PRICE
FROM 
    PRODUCT_1 P1
GROUP BY 
    P1.PUBLISHER;
-- 查询视图 PRODUCT_VIEW_AGG
SELECT * FROM PRODUCT_VIEW_AGG;
-- 创建视图 PRODUCT_VIEW_GROUP
CREATE VIEW PRODUCT_VIEW_GROUP AS
SELECT 
    P1.PUBLISHER,
    P2.PRODUCT_CATEGORYID,
    COUNT(*) AS TOTAL_PRODUCTS,
    AVG(P1.NOWPRICE) AS AVG_PRICE
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
GROUP BY 
    P1.PUBLISHER, P2.PRODUCT_CATEGORYID;
-- 查询视图 PRODUCT_VIEW_GROUP
SELECT * FROM PRODUCT_VIEW_GROUP;
-- 创建视图 PRODUCT_VIEW_SUBQUERY
CREATE VIEW PRODUCT_VIEW_SUBQUERY AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WHERE 
    P1.NOWPRICE > (SELECT AVG(NOWPRICE) FROM PRODUCT_1);
-- 查询视图 PRODUCT_VIEW_SUBQUERY
SELECT * FROM PRODUCT_VIEW_SUBQUERY;
-- 创建视图 PRODUCT_VIEW_JOIN
CREATE VIEW PRODUCT_VIEW_JOIN AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WHERE 
    P1.PUBLISHER = 'Publisher1';
-- 查询视图 PRODUCT_VIEW_JOIN
SELECT * FROM PRODUCT_VIEW_JOIN;
-- 创建视图 PRODUCT_VIEW_UNION
CREATE VIEW PRODUCT_VIEW_UNION AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WHERE 
    P1.PUBLISHER = 'Publisher1'
UNION
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WHERE 
    P1.PUBLISHER = 'Publisher2';
-- 查询视图 PRODUCT_VIEW_UNION
SELECT * FROM PRODUCT_VIEW_UNION;
-- 创建视图 PRODUCT_VIEW_COMPLEX
CREATE VIEW PRODUCT_VIEW_COMPLEX AS
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.AUTHOR,
    P1.PUBLISHER,
    P2.PUBLISHTIME,
    P2.PRODUCT_CATEGORYID,
    P2.PRODUCTNO,
    P2.DESCRIPTION,
    P2.PHOTO,
    P2.SATETYSTOCKLEVEL,
    P2.ORIGINALPRICE,
    P1.NOWPRICE,
    P2.DISCOUNT,
    P2.TYPE,
    P2.PAPERTOTAL,
    P2.WORDTOTAL,
    P2.SELLSTARTTIME,
    P2.SELLENDTIME
FROM 
    PRODUCT_1 P1
JOIN 
    PRODUCT_2 P2 
ON 
    P1.PRODUCTID = P2.PRODUCTID
WHERE 
    P1.NOWPRICE > 20 AND P2.PRODUCT_CATEGORYID = 101;
-- 查询视图 PRODUCT_VIEW_COMPLEX
SELECT * FROM PRODUCT_VIEW_COMPLEX