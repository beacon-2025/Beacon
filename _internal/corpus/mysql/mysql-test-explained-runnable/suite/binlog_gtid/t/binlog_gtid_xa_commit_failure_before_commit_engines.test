# ==== Purpose ====
#
# This script tests server behavior when a crash occurs during the
# execution of `XA COMMIT`, just before the transaction is committed in the
# SEs.
#
# ==== Requirements ====
#
# After server restart:
# R1. The `XA COMMIT` statement should be found in the binlog.
# R2. The GTID_EXECUTED variable should be updated.
# R3. There shouldn't be any pending XA transactions visible with `XA
#     RECOVER`.
#
# ==== Implementation ====
#
# 1. Setup scenario: create table and insert some records.
# 2. Start and execute an XA transaction containing an insert until before
#    `XA COMMIT`.
# 3. Take the `GTID_EXECUTED` state.
# 4. Crash the server during `XA COMMIT` execution before committing in the
#    storage engines.
# 5. Restart server and check:
#    a. Error log for messages stating that recovery process found one
#       transaction needing recovery.
#    b. The `XA COMMIT` is present in the binary log.
#    c. The GTID_EXECUTED variable was updated.
#    d. There aren't any pending XA transaction listed in the output of `XA
#       RECOVER`.
#    e. The table has been updated.
#
# ==== References ====
#
# WL#11300: Crash-safe XA + binary log
#
# Related tests