# ==== Purpose ====
#
# This script tests server behavior when a crash occurs during the
# execution of `XA PREPARE` and just before the transaction is written to
# the binary log.
#
# ==== Requirements ====
#
# After server restart:
# R1. The `XA PREPARE` statement shouldn't be logged to the binlog.
# R2. There shouldn't be any changes to GTID_EXECUTED.
# R3. There shouldn't be any pending XA transactions visible with `XA
#     RECOVER`.
#
# ==== Implementation ====
#
# 1. Setup scenario: create table and insert some records.
# 2. Start and execute an XA transaction containing an insert until before
#    `XA PREPARE`.
# 3. Take the `GTID_EXECUTED` state.
# 4. Crash the server during `XA PREPARE` execution, after preparing in the
#    storage engines and just before writing to the binary log.
# 5. Restart server and check:
#    a. Error log for messages stating that recovery process found one
#       transaction needing recovery.
#    b. The `XA PREPARE` wasn't logged to the binary log.
#    c. There aren't any changes to GTID_EXECUTED.
#    d. There aren't any pending XA transaction listed in the output of `XA
#       RECOVER`.
#    e. There aren't changes to the table.
#
# ==== References ====
#
# WL#11300: Crash-safe XA + binary log
#
# Related tests