# ==== Purpose ====
#
# This script tests server behavior when a crash occurs during the
# execution of `XA PREPARE`, after the transaction was written to the
# binlog and just before engines mark the transaction as prepared in the
# TC.
#
# ==== Requirements ====
#
# After server restart:
# R1. The `XA PREPARE` statement should be present in the binlog.
# R2. The GTID_EXECUTED variable should have been updated.
# R3. There should be one pending XA transactions visible with `XA
#     RECOVER`.
# R4. There should still be one pending XA transaction visible with `XA
#     RECOVER` if server is restarted after the crash-recovery.
#
# ==== Implementation ====
#
# 1. Setup scenario: create table and insert some records.
# 2. Start and execute an XA transaction containing an insert until before
#    `XA PREPARE`.
# 3. Take the `GTID_EXECUTED` state.
# 4. Crash the server during `XA PREPARE` execution, after writing to the
#    binlog and before marking the transaction as prepared in TC.
# 5. Restart server and check:
#    a. Error log for messages stating that recovery process found one
#       transaction needing recovery.
#    b. The `XA PREPARE` was logged to the binary log.
#    c. The GTID_EXECUTED variable was updated.
#    d. There is one pending XA transaction listed in the output of `XA
#       RECOVER`.
#    e. There aren't changes to the table.
# 6. Restart the server and check that the transaction is still in preared
#    state, meaning, the recovery process moved the transaction to
#    `PERSISTED_IN_TC` and that state was persisted.
#
# ==== References ====
#
# WL#11300: Crash-safe XA + binary log
#
# Related tests