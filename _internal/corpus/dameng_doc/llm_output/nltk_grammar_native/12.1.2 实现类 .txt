```plaintext
CREATE_CLASS_BODY -> 'CREATE' OR_REPLACE 'CLASS' 'BODY' SCHEMA_NAME '.' CLASS_NAME WITH_ENCRYPTION AS_IS CLASS_BODY 'END' CLASS_NAME
OR_REPLACE -> 'OR' 'REPLACE' | ''
WITH_ENCRYPTION -> 'WITH' 'ENCRYPTION' | ''
AS_IS -> 'AS' | 'IS'
CLASS_BODY -> PROCEDURE_FUNCTION_LIST INITIALIZATION_CODE
PROCEDURE_FUNCTION_LIST -> PROCEDURE_IMPLEMENTATION | FUNCTION_IMPLEMENTATION | PROCEDURE_IMPLEMENTATION ',' FUNCTION_IMPLEMENTATION
PROCEDURE_IMPLEMENTATION -> METHOD_INHERITANCE_ATTRIBUTE STATIC_MEMBER 'PROCEDURE' PROCEDURE_NAME PARAMETER_LIST AS_IS 'BEGIN' IMPLEMENTATION_BODY 'END' PROCEDURE_NAME
FUNCTION_IMPLEMENTATION -> METHOD_INHERITANCE_ATTRIBUTE MAP STATIC_MEMBER 'FUNCTION' FUNCTION_NAME PARAMETER_LIST 'RETURN' RETURN_DATA_TYPE DETERMINISTIC PIPELINED AS_IS 'BEGIN' IMPLEMENTATION_BODY 'END' FUNCTION_NAME
METHOD_INHERITANCE_ATTRIBUTE -> OVERRIDE_ATTRIBUTE | FINAL_ATTRIBUTE | OVERRIDE_ATTRIBUTE FINAL_ATTRIBUTE
OVERRIDE_ATTRIBUTE -> 'NOT' 'OVERRIDING' | 'OVERRIDING'
FINAL_ATTRIBUTE -> 'FINAL' | 'NOT' 'FINAL' | 'INSTANTIABLE' | 'NOT' 'INSTANTIABLE'
STATIC_MEMBER -> 'STATIC' | 'MEMBER'
MAP -> 'MAP' | ''
DETERMINISTIC -> 'DETERMINISTIC' | ''
PIPELINED -> 'PIPELINED' | ''
INITIALIZATION_CODE -> DECLARE_PART 'BEGIN' EXECUTION_PART EXCEPTION_HANDLING_PART | ''
DECLARE_PART -> 'DECLARE' DECLARE_DEFINITION | ''
DECLARE_DEFINITION -> VARIABLE_DECLARATION | EXCEPTION_VARIABLE_DECLARATION | CURSOR_DEFINITION | SUBPROCEDURE_DEFINITION | SUBFUNCTION_DEFINITION
VARIABLE_DECLARATION -> VARIABLE_NAME ',' VARIABLE_NAME VARIABLE_TYPE DEFAULT_ASSIGN_EXPRESSION ';'
VARIABLE_TYPE -> DMSQL_PROGRAM_TYPE | SCHEMA_NAME '.' TABLE_NAME '.' COLUMN_NAME '%TYPE' | SCHEMA_NAME '.' TABLE_NAME '%ROWTYPE' | RECORD_TYPE
RECORD_TYPE -> 'RECORD' '(' VARIABLE_NAME DMSQL_PROGRAM_TYPE ',' VARIABLE_NAME DMSQL_PROGRAM_TYPE ')'
EXCEPTION_VARIABLE_DECLARATION -> EXCEPTION_VARIABLE_NAME 'EXCEPTION' 'FOR' ERROR_NUMBER | ''
CURSOR_DEFINITION -> 'CURSOR' CURSOR_NAME 'FOR' QUERY_EXPRESSION | TABLE_JOIN | ''
SUBPROCEDURE_DEFINITION -> 'PROCEDURE' PROCEDURE_NAME '(' PARAMETER_LIST ')' AS_IS MODULE_BODY
SUBFUNCTION_DEFINITION -> 'FUNCTION' FUNCTION_NAME '(' PARAMETER_LIST ')' 'RETURN' RETURN_DATA_TYPE PIPELINED AS_IS MODULE_BODY
EXECUTION_PART -> SQL_PROCEDURE_STATEMENT_SEQUENCE ';' SQL_PROCEDURE_STATEMENT_SEQUENCE | ''
SQL_PROCEDURE_STATEMENT_SEQUENCE -> LABEL_DECLARATION SQL_PROCEDURE_STATEMENT ';'
LABEL_DECLARATION -> '<<' LABEL_NAME '>>' | ''
SQL_PROCEDURE_STATEMENT -> SQL_STATEMENT | SQL_CONTROL_STATEMENT
EXCEPTION_HANDLING_PART -> 'EXCEPTION' EXCEPTION_HANDLING_STATEMENT ';' EXCEPTION_HANDLING_STATEMENT | ''
EXCEPTION_HANDLING_STATEMENT -> 'WHEN' EXCEPTION_NAME 'THEN' SQL_PROCEDURE_STATEMENT_SEQUENCE
```