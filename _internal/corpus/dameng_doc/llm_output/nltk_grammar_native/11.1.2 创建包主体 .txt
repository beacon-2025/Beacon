```plaintext
CREATE_PACKAGE_BODY -> 'CREATE' OR_REPLACE 'PACKAGE' 'BODY' SCHEMA_NAME '.' PACKAGE_NAME WITH_ENCRYPTION AS_IS PACKAGE_BODY_PART 'END' PACKAGE_NAME
OR_REPLACE -> 'OR' 'REPLACE' | ''
SCHEMA_NAME -> 'schema_name_1'
PACKAGE_NAME -> 'package_name_1'
WITH_ENCRYPTION -> 'WITH' 'ENCRYPTION' | ''
AS_IS -> 'AS' | 'IS'
PACKAGE_BODY_PART -> BODY_DECLARATION_LIST INITIALIZATION_CODE
BODY_DECLARATION_LIST -> BODY_DECLARATION | BODY_DECLARATION ',' BODY_DECLARATION
BODY_DECLARATION -> VARIABLE_DEFINITION | CURSOR_DEFINITION | EXCEPTION_DEFINITION | PROCEDURE_DEFINITION | FUNCTION_DEFINITION | TYPE_DECLARATION | PROCEDURE_IMPLEMENTATION | FUNCTION_IMPLEMENTATION
VARIABLE_DEFINITION -> VARIABLE_NAME_LIST DATA_TYPE DEFAULT_VALUE_DEFINITION
VARIABLE_NAME_LIST -> 'variable_name_1' | 'variable_name_1' ',' 'variable_name_2'
DATA_TYPE -> 'data_type_1'
DEFAULT_VALUE_DEFINITION -> 'DEFAULT' 'default_value' | ''
CURSOR_DEFINITION -> 'CURSOR' CURSOR_NAME FOR_QUERY
CURSOR_NAME -> 'cursor_name_1'
FOR_QUERY -> 'FOR' 'query_statement' | ''
EXCEPTION_DEFINITION -> EXCEPTION_NAME 'EXCEPTION' FOR_EXCEPTION_CODE
EXCEPTION_NAME -> 'exception_name_1'
FOR_EXCEPTION_CODE -> 'FOR' 'exception_code_value' | ''
PROCEDURE_DEFINITION -> 'PROCEDURE' PROCEDURE_NAME PARAMETER_LIST
PROCEDURE_NAME -> 'procedure_name_1'
PARAMETER_LIST -> '(' 'parameter_list_1' ')' | ''
FUNCTION_DEFINITION -> 'FUNCTION' FUNCTION_NAME PARAMETER_LIST 'RETURN' RETURN_DATA_TYPE
FUNCTION_NAME -> 'function_name_1'
RETURN_DATA_TYPE -> 'return_data_type_1'
TYPE_DECLARATION -> 'TYPE' TYPE_NAME 'IS' DATA_TYPE
TYPE_NAME -> 'type_name_1'
PROCEDURE_IMPLEMENTATION -> 'PROCEDURE' PROCEDURE_NAME PARAMETER_LIST AS_IS 'BEGIN' IMPLEMENTATION_BODY 'END' PROCEDURE_NAME
IMPLEMENTATION_BODY -> 'implementation_body_1'
FUNCTION_IMPLEMENTATION -> 'FUNCTION' FUNCTION_NAME PARAMETER_LIST 'RETURN' RETURN_DATA_TYPE DETERMINISTIC PIPELINED AS_IS 'BEGIN' IMPLEMENTATION_BODY 'END' FUNCTION_NAME
DETERMINISTIC -> 'DETERMINISTIC' | ''
PIPELINED -> 'PIPELINED' | ''
INITIALIZATION_CODE -> DECLARATION_PART 'BEGIN' EXECUTION_PART EXCEPTION_HANDLING_PART
DECLARATION_PART -> 'DECLARE' DECLARATION_DEFINITION | ''
DECLARATION_DEFINITION -> VARIABLE_LIST_DECLARATION | EXCEPTION_VARIABLE_DECLARATION | CURSOR_DEFINITION | SUBPROCEDURE_DEFINITION | SUBFUNCTION_DEFINITION
VARIABLE_LIST_DECLARATION -> VARIABLE_INITIALIZATION | VARIABLE_INITIALIZATION VARIABLE_INITIALIZATION
VARIABLE_INITIALIZATION -> 'variable_initialization_1'
EXCEPTION_VARIABLE_DECLARATION -> EXCEPTION_VARIABLE_NAME 'EXCEPTION' FOR_ERROR_CODE
EXCEPTION_VARIABLE_NAME -> 'exception_variable_name_1'
FOR_ERROR_CODE -> 'FOR' 'error_code_value' | ''
SUBPROCEDURE_DEFINITION -> 'PROCEDURE' SUBPROCEDURE_NAME '(' PARAMETER_LIST ')' AS_IS MODULE_BODY
SUBPROCEDURE_NAME -> 'subprocedure_name_1'
MODULE_BODY -> 'module_body_1'
SUBFUNCTION_DEFINITION -> 'FUNCTION' SUBFUNCTION_NAME '(' PARAMETER_LIST ')' 'RETURN' RETURN_DATA_TYPE AS_IS MODULE_BODY
SUBFUNCTION_NAME -> 'subfunction_name_1'
EXECUTION_PART -> SQL_PROCEDURE_STATEMENT_SEQUENCE | SQL_PROCEDURE_STATEMENT_SEQUENCE SQL_PROCEDURE_STATEMENT_SEQUENCE
SQL_PROCEDURE_STATEMENT_SEQUENCE -> LABEL_DECLARATION SQL_PROCEDURE_STATEMENT
LABEL_DECLARATION -> '<<' LABEL_NAME '>>' | ''
LABEL_NAME -> 'label_name_1'
SQL_PROCEDURE_STATEMENT -> SQL_STATEMENT | SQL_CONTROL_STATEMENT
SQL_STATEMENT -> 'sql_statement_1'
SQL_CONTROL_STATEMENT -> 'sql_control_statement_1'
EXCEPTION_HANDLING_PART -> 'EXCEPTION' EXCEPTION_HANDLING_STATEMENT | EXCEPTION_HANDLING_STATEMENT EXCEPTION_HANDLING_STATEMENT
EXCEPTION_HANDLING_STATEMENT -> 'WHEN' EXCEPTION_NAME 'THEN' SQL_PROCEDURE_STATEMENT_SEQUENCE
```