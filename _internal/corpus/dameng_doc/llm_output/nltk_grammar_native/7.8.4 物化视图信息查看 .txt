```plaintext
S -> VIEW_INFO | NUMERIC_FUNCTIONS | STRING_FUNCTIONS | DATE_TIME_FUNCTIONS | NULL_CHECK_FUNCTIONS | TYPE_CONVERSION_FUNCTIONS | MISC_FUNCTIONS

VIEW_INFO -> 'SYS.USER_MVIEWS' COLUMN_INFO
COLUMN_INFO -> 'SCHID' 'INTEGER' | 'MVIEW_NAME' 'VARCHAR(128)' | 'QUERY' 'TEXT' | 'QUERY_LEN' 'INTEGER' | 'REWRITE_ENABLED' 'VARCHAR(128)' | 'REFRESH_MODE' 'VARCHAR(128)' | 'REFRESH_METHOD' 'VARCHAR(128)' | 'MVIEW_TYPE' 'VARCHAR(128)' | 'LAST_REFRESH_TYPE' 'VARCHAR(128)' | 'STALENESS' 'VARCHAR(128)' | 'LAST_REFRESH_DATE' 'DATETIME(6)'

NUMERIC_FUNCTIONS -> 'ABS(n)' | 'ACOS(n)' | 'ASIN(n)' | 'ATAN(n)' | 'ATAN2(n1,n2)' | 'CEIL(n)' | 'CEILING(n)' | 'COS(n)' | 'COSH(n)' | 'COT(n)' | 'DEGREES(n)' | 'EXP(n)' | 'FLOOR(n)' | 'GREATEST(n {,n})' | 'GREAT (n1,n2)' | 'LEAST(n {,n})' | 'LN(n)' | 'LOG(n1[,n2])' | 'LOG10(n)' | 'MOD(m,n)' | 'PI()' | 'POWER(n1,n2)/POWER2(n1,n2)' | 'RADIANS(n)' | 'RAND([n])' | 'ROUND(n[,m])' | 'SIGN(n)' | 'SIN(n)' | 'SINH(n)' | 'SQRT(n)' | 'TAN(n)' | 'TANH(n)' | 'TO_NUMBER (char [,fmt])' | 'TRUNC(n[,m])' | 'TRUNCATE(n[,m])' | 'TO_CHAR(n [, fmt [, 'nls' ] ])' | 'BITAND(n1, n2)'

STRING_FUNCTIONS -> 'ASCII(char)' | 'ASCIISTR(char)' | 'BIT_LENGTH(char)' | 'CHAR(n)' | 'CHAR_LENGTH(char)/ CHARACTER_LENGTH(char)' | 'CHR(n)' | 'CONCAT(char1,char2,char3,…)' | 'DIFFERENCE(char1,char2)' | 'INITCAP(char)' | 'INS(char1,begin,n,char2)' | 'INSERT(char1,n1,n2,char2)/ INSSTR(char1,n1,n2,char2)' | 'INSTR(char1,char2[,n,[m]])' | 'INSTRB(char1,char2[,n,[m]])' | 'LCASE(char)' | 'LEFT(char,n)/ LEFTSTR(char,n)' | 'LEN(char)' | 'LENGTH(clob)' | 'OCTET_LENGTH(char)' | 'LOCATE(char1,char2[,n])' | 'LOWER(char)' | 'LPAD(char1,n,char2)' | 'LTRIM(char1,char2)' | 'POSITION(char1,/ IN char2)' | 'REPEAT(char,n)/ REPEATSTR(char,n)' | 'REPLACE(STR, search [,replace] )' | 'REPLICATE(char,times)' | 'REVERSE(char)' | 'RIGHT / RIGHTSTR(char,n)' | 'RPAD(char1,n,char2)' | 'RTRIM(char1,char2)' | 'SOUNDEX(char)' | 'SPACE(n)' | 'STRPOSDEC(char)' | 'STRPOSDEC(char,pos)' | 'STRPOSINC(char)' | 'STRPOSINC(char,pos)' | 'STUFF(char1,begin,n,char2)' | 'SUBSTR(char,m,n)/ SUBSTRING(char FROM m [FOR n])' | 'SUBSTRB(char,n,m)' | 'TO_CHAR(character)' | 'TRANSLATE(char,from,to)' | 'TRIM([LEADING|TRAILING|BOTH] [exp] [] FROM char2])' | 'UCASE(char)' | 'UPPER(char)' | 'REGEXP' | 'OVERLAY(char1 PLACING char2 FROM int [FOR int])' | 'TEXT_EQUAL' | 'BLOB_EQUAL' | 'NLSSORT(str1 [,nls_sort=str2])' | 'GREATEST(char {,char})' | 'GREAT (char1, char2)' | 'TO_SINGLE_BYTE (char)' | 'TO_MULTI_BYTE (char)' | 'EMPTY_CLOB ()' | 'EMPTY_BLOB ()' | 'UNISTR (char)' | 'ISNULL(char)' | 'CONCAT_WS(delim, char1,char2,char3,…)' | 'SUBSTRING_INDEX(char, delim, count)'

DATE_TIME_FUNCTIONS -> 'ADD_DAYS(date,n)' | 'ADD_MONTHS(date,n)' | 'ADD_WEEKS(date,n)' | 'CURDATE()' | 'CURTIME(n)' | 'CURRENT_DATE()' | 'CURRENT_TIME(n)' | 'CURRENT_TIMESTAMP(n)' | 'DATEADD(datepart,n,date)' | 'DATEDIFF(datepart,date1,date2)' | 'DATEPART(datepart,date)' | 'DAY(date)' | 'DAYNAME(date)' | 'DAYOFMONTH(date)' | 'DAYOFWEEK(date)' | 'DAYOFYEAR(date)' | 'DAYS_BETWEEN(date1,date2)' | 'EXTRACT(时间字段 FROM date)' | 'GETDATE(n)' | 'GREATEST(date {,date})' | 'GREAT (date1,date2)' | 'HOUR(time)' | 'LAST_DAY(date)' | 'LEAST(date {,date})' | 'MINUTE(time)' | 'MONTH(date)' | 'MONTHNAME(date)' | 'MONTHS_BETWEEN(date1,date2)' | 'NEXT_DAY(date1,char2)' | 'NOW(n)' | 'QUARTER(date)' | 'SECOND(time)' | 'ROUND (date1[, fmt])' | 'TIMESTAMPADD(datepart,n,timestamp)' | 'TIMESTAMPDIFF(datepart,timeStamp1,timestamp2)' | 'SYSDATE()' | 'TO_DATE(CHAR[,fmt[,'nls']])/TO_TIMESTAMP(CHAR[,fmt[,'nls']])/ TO_TIMESTAMP_TZ(CHAR[,fmt])' | 'FROM_TZ(timestamp,timezone|tz_name])' | 'TZ_OFFSET(timezone|[tz_name])' | 'TRUNC(date[,fmt])' | 'WEEK(date)' | 'WEEKDAY(date)' | 'WEEKS_BETWEEN(date1,date2)' | 'YEAR(date)' | 'YEARS_BETWEEN(date1,date2)' | 'LOCALTIME(n)' | 'LOCALTIMESTAMP(n)' | 'OVERLAPS' | 'TO_CHAR(date[,fmt[,nls]])' | 'SYSTIMESTAMP(n)' | 'NUMTODSINTERVAL(dec,interval_unit)' | 'NUMTOYMINTERVAL (dec,interval_unit)' | 'WEEK(date, mode)' | 'UNIX_TIMESTAMP (datetime)' | 'FROM_UNIXTIME(unixtime)' | 'FROM_UNIXTIME(unixtime, fmt)' | 'SESSIONTIMEZONE' | 'DBTIMEZONE' | 'DATE_FORMAT(d, format)' | 'TIME_TO_SEC(d)' | 'SEC_TO_TIME(sec)' | 'TO_DAYS(timestamp)' | 'DATE_ADD(datetime, interval)' | 'DATE_SUB(datetime, interval)'

NULL_CHECK_FUNCTIONS -> 'COALESCE(n1,n2,…nx)' | 'IFNULL(n1,n2)' | 'ISNULL(n1,n2)' | 'NULLIF(n1,n2)' | 'NVL(n1,n2)' | 'NULL_EQU'

TYPE_CONVERSION_FUNCTIONS -> 'CAST(value AS 类型说明)' | 'CONVERT(类型说明,value)' | 'HEXTORAW(exp)' | 'RAWTOHEX(exp)' | 'BINTOCHAR(exp)' | 'TO_BLOB(value)' | 'UNHEX(exp)' | 'HEX(exp)'

MISC_FUNCTIONS -> 'DECODE(exp, search1, result1, … searchn, resultn [,default])' | 'ISDATE(exp)' | 'ISNUMERIC(exp)' | 'DM_HASH (exp)' | 'LNNVL(condition)' | 'LENGTHB(value)' | 'FIELD(value, e1, e2, e3, e4...en)' | 'ORA_HASH(exp [,max_bucket [,seed_value]])'
```