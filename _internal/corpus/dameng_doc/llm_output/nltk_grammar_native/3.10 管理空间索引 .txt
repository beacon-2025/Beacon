```plaintext
S -> SPATIAL_INDEX_CONDITION | SPATIAL_QUERY_EXAMPLE
SPATIAL_INDEX_CONDITION -> SPATIAL_FUNCTION_CONDITION SPATIAL_COLUMN_CONDITION SPATIAL_DATA_CONDITION ST_DISTANCE_CONDITION OTHER_FUNCTION_CONDITION
SPATIAL_FUNCTION_CONDITION -> 'DMGEO.ST_WITHIN' | 'DMGEO.ST_DISTANCE' | 'DMGEO.ST_DISJOINT' | 'DMGEO.ST_EQUALS' | 'DMGEO.ST_TOUCHES' | 'DMGEO.ST_OVERLAPS' | 'DMGEO.ST_CROSSES' | 'DMGEO.ST_INTERSECTS' | 'DMGEO.ST_CONTAINS' | 'DMGEO.ST_RELATE'
SPATIAL_COLUMN_CONDITION -> '空间函数的第一个参数必须是空间索引的列'
SPATIAL_DATA_CONDITION -> '空间函数中与之比较的空间数据必须是常量或固定的值'
ST_DISTANCE_CONDITION -> '对于ST_DISTANCE，仅支持<和<=某个常量值的条件'
OTHER_FUNCTION_CONDITION -> '对于其他的返回1和0表示TRUE和FALSE的函数，只支持缺省比较条件或=1的比较条件'

SPATIAL_QUERY_EXAMPLE -> QUERY_WITHIN_EXAMPLE | QUERY_DISTANCE_EXAMPLE
QUERY_WITHIN_EXAMPLE -> 'SELECT * FROM testgeo WHERE DMGEO.ST_WITHIN(geo, DMGEO.ST_GEOMFromText(string_value, int_value)) = 1' | 'SELECT * FROM testgeo WHERE DMGEO.ST_WITHIN(geo, DMGEO.ST_GEOMFromText(string_value, int_value))'
QUERY_DISTANCE_EXAMPLE -> 'SELECT * FROM testgeo WHERE DMGEO.ST_DISTANCE(geo, DMGEO.ST_GEOMFromText(string_value, int_value)) < int_value'
```