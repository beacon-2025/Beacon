```plaintext
S -> CREATE_TRIGGER
CREATE_TRIGGER -> 'CREATE' OR_REPLACE 'TRIGGER' TRIGGER_NAME WITH_ENCRYPTION 'AFTER TIMER ON DATABASE' TRIGGER_SCHEDULE WHEN_CONDITION TRIGGER_BODY
OR_REPLACE -> 'OR REPLACE' | ''
TRIGGER_NAME -> '模式名_1.触发器名_1'
WITH_ENCRYPTION -> 'WITH ENCRYPTION' | ''
TRIGGER_SCHEDULE -> FOR_ONCE | RECURRING
FOR_ONCE -> 'FOR ONCE AT DATETIME' TIME_EXPRESSION EXEC_EP_SEQNO
RECURRING -> MONTH_RATE | WEEK_RATE | DAY_RATE
MONTH_RATE -> 'FOR EACH' INT_VALUE 'MONTH' DAY_IN_MONTH
DAY_IN_MONTH -> 'DAY' INT_VALUE | 'DAY' INT_VALUE 'OF WEEK' INT_VALUE | 'DAY' INT_VALUE 'OF WEEK LAST'
WEEK_RATE -> 'FOR EACH' INT_VALUE 'WEEK' DAY_OF_WEEK_LIST
DAY_OF_WEEK_LIST -> INT_VALUE | INT_VALUE ',' INT_VALUE
DAY_RATE -> 'FOR EACH' INT_VALUE 'DAY'
ONCE_IN_DAY -> 'AT TIME' TIME_EXPRESSION
TIMES_IN_DAY -> DURING_TIME 'FOR EACH' INT_VALUE 'MINUTE'
DURING_TIME -> 'NULL' | 'FROM TIME' TIME_EXPRESSION | 'FROM TIME' TIME_EXPRESSION 'TO TIME' TIME_EXPRESSION
DURING_DATE -> 'NULL' | 'FROM DATETIME' DATETIME_EXPRESSION | 'FROM DATETIME' DATETIME_EXPRESSION 'TO DATETIME' DATETIME_EXPRESSION
EXEC_EP_SEQNO -> 'EXECUTE AT' INT_VALUE
WHEN_CONDITION -> 'WHEN' CONDITION_EXPRESSION | ''
TRIGGER_BODY -> 'BEGIN' SQL_STATEMENTS 'END'
```